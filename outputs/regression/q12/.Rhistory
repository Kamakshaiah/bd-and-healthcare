for (i in 1:10){
if (gender1[i] == 'male' & gender2[i] == 'female'){
invisible(print('male-male scenario'))
} else {
invisible(print('not male-male scenario'))
}
}
end <- Sys.time()
print(end - start)
1 > 2
1:10 > rnorm(10)
rnorm(10) > 1:10
res <- c(0, 0, 1, 0, 1, 1, 0, 1, 0)
res2 <- c(0, 0, 1, 0, 1, 1, 0, 0, 1)
res > res2
x <- c(TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE)
length(x)
y <- c(FALSE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE)
x & y
x && y
x <- sample(c(TRUE, FALSE), 10, replace = T)
y <- sample(c(TRUE, FALSE), 10, replace = T)
for (i in 1:length(x)){
if (x[i] == TRUE && y[i] == TRUE){
print(TRUE)
} else {
print(FALSE)
}
}
for (i in 1:length(x)){
if (x[i] == TRUE & y[i] == TRUE){
print(TRUE)
} else {
print(FALSE)
}
}
getwd()
list.dirs()
list.files()
dir.exists('mk')
dir.exists('BDA class')
dir.exists('My Pictures')
dir.create('mkamakshaiah')
setwd('mkamakshaiah')
getwd()
file.create('data.csv')
setwd()
setwd('~')
getwd()
file.path(getwd(), 'mk')
dir.create(file.path(getwd(), 'mk'))
dir.exists('mk')
dir.exists('mkamakshaiah')
dir.exists('csr')
file.exists('data.csv')
setwd('~/mkamakshaiah')
getwd()
file.exists('data.csv')
getwd()
file.remove('data.csv')
unlink('mkamakshaiah')
unlink('mkamakshaiah', recursive = TRUE)
file.remove('mkamakshaiah')
file.remove('mk')
getwd()
setwd('~')
file.remove('mk')
dir.exists('mk')
unlink('mk', recursive = TRUE)
unlink('mkamakshaiah', recursive = TRUE)
readClipboard()
path = readLines()
path
rm('path')
path
path <- readLines()
path
gsub(path, '\\\\', '/')
path
gsub('\\\\', '/', path)
path
pathch <- gsub('\\\\', '/', path)
path
pathch
dataf <- data.frame(x1 = rnorm(10), x2 = rnorm(10), x3 = rnorm(10))
head(dataf)
dataf[, -x3]
dataf[, -c(x3)]
dataf[, which(names(dataf) != x3)]
dataf[, which(names(dataf) != 'x3')]
dataf[, -3]
subset(dataf, -x3)
subset(dataf, -'x3')
subset(dataf, -c('x3'))
subset(dataf, names(dataf) != 'x3')
subset(dataf, -x3)
subset(dataf, select = -x3)
subset(dataf, select = -c(x1, x3))
help('data.frame')
txtdf <- matrix(1:30, 10, 3, dimnames = list(, c('and', 'with', 'medicine')))
txtdf <- matrix(1:30, 10, 3, dimnames = list(1:30, c('and', 'with', 'medicine')))
txtdf <- matrix(1:30, 10, 3, dimnames = list(1:10, c('and', 'with', 'medicine')))
txtdf
is.data.frame(txtdf)
subset(txtdf, select = -c(and))
subset(txtdf, select = -c(with)
)
subset(txtdf, select = -c(with, and))
abstracts <- read.csv(file.choose(), encoding="UTF-8")
abs <- abstracts$Abstract
library('tm')
abscorp <- VCorpus(VectorSource(abs))
acorp <- tm_map(abscorp, removePunctuation)
acorp <- tm_map(acorp, removeNumbers)
acorp <- tm_map(acorp, content_transformer(tolower))
acorp <- tm_map(acorp, removeWords, stopwords("en"))
acorp <- tm_map(acorp, stripWhitespace)
tm::inspect(acorp)
dim(tm::inspect(acorp))
adtm <- DocumentTermMatrix(abscorp)
# adtm <- DocumentTermMatrix(abscorp, control = list(weighting = weightTfIdf))
tm::inspect(adtm[10:16, ] )
length(adtm$dimnames)
adtm$dimnames[[1]]
length(adtm$dimnames[[2]])
bigdataf <- data.frame(as.matrix(adtm), stringsAsFactors=False)
dim(bigdataf)
length(names(bigdataf))
bigdataf[, (names(bigdataf) %in% c('from'))]
bigdataframe <- subset(bigdataf, select = -c(about, the, and, are, from, with, being, this, that, have, has, use, using, can, could, will, would, should))
length(names(bigdataframe)) # 2970
names(bigdataframe)
bigdataframe <- bigdataframe[, 123:2970]
length(names(bigdataframe)) # 2848
bdf <- subset(bigdataframe, select = which(apply(bigdataframe, 2, mean) > 0.24))
length(names(bdf)) #106
sum(names(bigdataframe) %in% c("data"))
sum(names(bigdataframe) %in% c("analytics"))
library(FactoMineR)
library(factoextra)
cafit <- FactoMineR::CA(bdf, ncp=2)
# q-1: design, approach, model,
fit <- manova(cbind(design, approach, model) ~ big + data + analytics, data = bdf)
summary(fit)
# q-1: design, approach, model,
fit <- lm(design ~ big + data + analytics, data = bdf)
summary(fit)
fit <- lm(approach ~ big + data + analytics, data = bdf)
summary(fit)
fit <- lm(model ~ big + data + analytics, data = bdf)
summary(fit)
fit <- manova(cbind(design, approach, model) ~ big + data + analytics, data = bdf)
summary(fit)
# q-1: design, approach, model,
fit <- lm(design ~ big + data + analytics, data = bdf)
anova(fit)
fit <- lm(approach ~ big + data + analytics, data = bdf)
anova(fit)
fit <- lm(model ~ big + data + analytics, data = bdf) # intercept is significant
anova(fit)
library(psych)
structure.diagram(fit)
lmDiagram(fit)
fit <- manova(cbind(design, approach, model) ~ big + data + analytics, data = bdf)
summary(fit)
anova(fit) # data significant
summary(fit)
lmDiagram(fit)
fit <- lm(model ~ big + data + analytics, data = bdf) # intercept is significant
anova(fit) # big significant @ 10% significance
lmDiagram(fit)
help('lmDiagram')
lmDiagram(fit, show=TRUE)
lmDiagram(fit)
install.packages('heplots')
fit <- manova(cbind(design, approach, model) ~ big + data + analytics, data = bdf)
library(heplots)
heplot3d(fit)
install.packages('rgl')
heplot3d(fit)
getwd()
path <- readLines()
path
gsub(path, '\\\\', '/')
path
gsub('\\\\', '/', path)
path <- gsub('\\\\', '/', path)
file.path(path, 'q1-manova-plot.png')
pairs(fit)
fit <- lm(model ~ big + data + analytics, data = bdf) # intercept is significant
anova(fit) # big significant @ 10% significance
lmDiagram(fit)
path
loadings(fit)
summary(fit)
fit$coefficients
fit$model
fit$fitted.values
fit$terms
write.csv(summary(fit), file.path(path, 'q1-lm-loadings.csv'))
write.csv(unclass(summary(fit), file.path(path, 'q1-lm-loadings.csv')))
write.csv(unclass(summary(fit)), file.path(path, 'q1-lm-loadings.csv'))
getwd()
setwd(path)
getwd()
sink(file.path(path, 'q1-lm-summary.csv'))
print(summary(fit))
sink()
fit <- lm(model ~ big + data + analytics, data = bdf) # intercept is significant
anova(fit) # big significant @ 10% significance
summary(fit)
getwd()
sink(file.path(path, 'q1-lm-summary.csv'))
print(summary(fit))
sink()
fit <- manova(cbind(design, approach, model) ~ big + data + analytics, data = bdf)
summary(fit)
anova(fit) # intercept significant @ 10%
data.frame(anova(fit))
write.csv(anova(fit), file.path(path, 'q1-manova-fit.csv'))
sink(file.path(path, 'q1-manova-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), file.path(path, 'q1-anova.csv'))
bdf[. 'design']
bdf[, 'design']
bdf[, 'visualization']
bdf[, 'ebusiness']
bdf[, 'business']
bdf[, 'ecommerce']
bdf[, 'e-commerce']
bdf[, 'e-business']
bdf[, 'electronic']
bdf[, 'commerce']
bdf[, 'business']
fit <- manova(cbind(clinical, medical, disease, diseases, treatment, healthcare, outcomes) ~ big + data + analytics, data = bigdataframe)
summary(fit)
anova(fit) # data significant
fit <- lm(cbind(clinical, medical, disease, diseases, treatment, healthcare, outcomes) ~ big + data + analytics, data = bdf)
summary(fit)
setwd(path)
getwd()
path <- file.path("D:/Research/papers/big data/healthcare/plots/regression", "q0")
path
setwd(path); getwd()
setwd(path)
getwd()
setwd(~); getwd()
setwd('~'); getwd()
setwd(path)
setwd(file.path(path))
setwd("D:/Research/papers/big data/healthcare/plots/regression/q0")
unlink(getwd())
setwd("D:/Research/papers/big data/healthcare/plots/regression/q0")
getwd()
setwd("D:/Research/papers/big data/healthcare/plots/regression/q0")
path <- file.path("D:/Research/papers/big data/healthcare/plots/regression")
# unlink(getwd())
setwd(path)
getwd()
dir.create('q0')
dir.create('q0'); list.dirs()
setwd(file.path(path, 'q0'))
getwd()
path <- getwd()
sink(file.path(path, 'q1-lm-summary.csv'))
sink()
sink(file.path(path, 'q0-lm-summary.csv'))
print(summary(fit))
sink()
lmDiagram(fit)
update(fit, clinical ~ .)
lmDiagram(fit)
lmDiagram(update(fit, clinical ~ .))
fit <- manova(cbind(clinical, medical, disease, diseases, treatment, healthcare, outcomes) ~ big + data + analytics, data = bdf)
summary(fit)
anova(fit)
path
sink(file.path(path, 'q0-manova-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q0-anova-table.csv')
pairs(fit)
fit <- lm(cbind(electronic, business) ~ big + data + analytics + technology + techniques, data = bdf)
#q2 - electronic business
bdf[, 'analytics']
#q2 - electronic business
bdf[, 'techniques']
#q2 - electronic business
bdf[, 'technology']
#q2 - electronic business
bdf[, 'technics']
#q2 - electronic business
bdf[, 'technology']
fit <- lm(cbind(electronic, business) ~ big + data + analytics + technology, data = bdf)
summary(fit)
fit <- lm(cbind(clinical, medical, disease, diseases, treatment, healthcare, outcomes) ~ big + data + analytics + technology, data = bdf)
summary(fit)
path <- file.path("D:/Research/papers/big data/healthcare/plots/regression")
setwd(path)
getwd()
setwd(file.path(path, 'q0')); getwd()
path <- getwd()
sink(file.path(path, 'q0-lm-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q0-lm-anova.csv')
sink(file.path(path, 'q0-manova-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q0-manova-anova.csv')
pairs(fit)
fit <- lm(cbind(design, approach, model) ~ big + data + analytics + technology, data = bdf) # intercept is significant
summary(fit)
getwd()
path
path <- file.path("D:/Research/papers/big data/healthcare/plots/regression")
getwd()
pathch <- file.path(path, 'q1')
setwd(pathch); getwd()
sink(file.path(path, 'q1-lm-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q1-lm-anova-table.csv')
fit <- manova(cbind(design, approach, model) ~ big + data + analytics, data = bdf)
summary(fit)
sink(file.path(path, 'q1-manova-anova.csv'))
print(summary(fit))
sink()
bdf[, 'technology']
fit <- lm(cbind(electronic, business) ~ big + data + analytics + technology, data = bdf)
summary(fit)
path
pathch
pathch <- file.path(path, 'q2')
dir.create(file.path(path, 'q2'))
list.dirs(path)
pathch <- file.path(path, 'q2')
setwd(pathch); getwd()
setwd(pathch); getwd()
sink(file.path(path, 'q2-lm-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q2-lm-anova-table.csv')
lmDiagram(fit)
fit <- manova(cbind(electronic, business) ~ big + data + analytics + technology, data = bdf)
summary(fit)
sink(file.path(pathch, 'q2-manova-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q2-manova-anova-table.csv')
pairs(fit)
fit <- manova(cbind(electronic, business) ~ big + data + analytics + technology, data = bdf)
summary(fit) # data significant
pairs(fit)
heplot(fit)
bdf[, 'cloud']
bdf[, 'cloud computing']
bdf[, 'computing']
bdf[, 'comput']
bdf[, 'compute']
bdf[, 'computers']
fit <- lm(cloud ~ big + data + analytics + technology, data = bdf)
summary(fit)
fit <- lm(cbind(cloud, technology) ~ big + data + analytics, data = bdf)
summary(fit)
fit <- lm(cloud ~ big + data + analytics + technology, data = bdf)
summary(fit)
lmDiagram(fit)
pathch <- file.path(path, 'q3')
setwd(pathch); getwd()
path
pathch <- file.path(path, 'q3')
setwd(pathch); getwd()
setwd(path); getwd()
setwd(pathch); getwd()
pathch <- file.path(path, 'q3')
setwd(pathch); getwd()
sink(file.path(path, 'q3-lm-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q3-lm-anova-table.csv')
fit <- manova(cbind(cloud, electronic, business) ~ big + data + analytics + technology, data = bdf)
summary(fit) # data significant
fit <- manova(cbind(cloud, electronic, business) ~ big + data + analytics + technology, data = bdf)
summary(fit) # data significant
pathch
sink(file.path(pathch, 'q3-manova-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q3-manova-anova-table.csv')
pairs(fit)
bdf[, 'iot']
bdf[, 'IoT']
bdf[, 'Iot']
bdf[, 'internet']
bdf[, 'things']
bdf[, 'thing']
bdf[, 'internet of things']
bdf[, 'internet']
bdf[, '5g']
bdf[, '5G']
bdf[, 'sql']
bdf[, 'data']
bdf[, 'base']
bdf[, 'database']
bdf[, 'datawarehouse']
bdf[, 'warehouse']
bdf[, 'base']
bdf[, 'knowledge']
bdf[, 'engineering']
bdf[, 'engineer']
bdf[, 'enginere']
bdf[, 'knowledge']
bdf[, 'engineer']
bdf[, 'engineering']
fit <- lm(knowledge  ~ big + data + analytics + technology, data = bdf)
summary(fit)
lmDiagram(fit)
pathch <- file.path(path, 'q6')
setwd(pathch); getwd()
sink(file.path(pathch, 'q6-lm-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q6-lm-anova-table.csv')
bdf[, 'mining']
bdf[, 'mine']
bdf[, 'extraction']
bdf[, 'data']
bdf[, 'machine']
bdf[, 'learning'];
fit <- lm(cbind(machine, learning, electronic, business) ~ big + data + analytics + technology, data = bdf)
summary(fit) # data significant
pathch <- file.path(path, 'q8')
setwd(pathch); getwd()
sink(file.path(pathch, 'q8-lm-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q8-lm-anova-table.csv')
pairs(fit)
summary(fit) # data significant
fit <- manova(cbind(machine, learning, electronic, business) ~ big + data + analytics + technology, data = bdf)
summary(fit) # data significant
bdf[, 'security']
bdf[, 'privacy']
bdf[, 'trust']
bdf[, 'risk']
bdf[, 'fraud']
fit <- lm(cbind(security, risk, electronic, business) ~ big + data + analytics + technology, data = bdf)
summary(fit) # data significant
pathch <- file.path(path, 'q9')
setwd(pathch); getwd()
pathch <- file.path(path, 'q9')
setwd(pathch); getwd()
sink(file.path(pathch, 'q9-lm-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q9-lm-anova-table.csv')
pairs(fit)
bdf[, 'ai']
bdf[, 'artificial']
bdf[, 'intelligence']
bdf[, 'intellegence']
bdf[, 'AI']
bdf[, 'decision']
bdf[, 'making']
bdf[, 'models']
bdf[, 'model']
bdf[, 'models']
fit <- lm(cbind(decision, model, business) ~ big + data + analytics + technology, data = bdf)
summary(fit) # data significant
pathch <- file.path(path, 'q10')
setwd(pathch); getwd()
pathch <- file.path(path, 'q10')
setwd(pathch); getwd()
sink(file.path(pathch, 'q10-lm-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q10-lm-anova-table.csv')
pairs(fit)
bdf[, 'reliability']
bdf[, 'reliable']
bdf[, 'relia']
bdf[, 'trust']
bdf[, 'worth']
bdf[, 'consistency']
bdf[, 'consistancy']
bdf[, 'trustworthiness']
bdf[, 'ai']
bdf[, 'business']
bdf[, 'applications']
fit <- lm(cbind(business, applications) ~ big + data + analytics + technology, data = bdf)
summary(fit) # data significant
pathch <- file.path(path, 'q12')
setwd(pathch); getwd()
sink(file.path(pathch, 'q12-lm-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q12-lm-anova-table.csv')
pairs(fit)
fit <- lm(cbind(business, applications) ~ big + data + analytics + technology, data = bdf)
summary(fit) # data significant
sink(file.path(pathch, 'q12-lm-summary.csv'))
print(summary(fit))
sink()
write.csv(anova(fit), 'q12-lm-anova-table.csv')
pairs(fit)
lmDiagram(fit)
lmDiagram(update(fit, business ~ .))
par(mfrow = c(1, 2))
lmDiagram(update(fit, business ~ .))
lmDiagram(update(fit, applications ~ .))
